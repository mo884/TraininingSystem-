// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraininingSystem.DAL.Databae;

#nullable disable

namespace TraininingSystem.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240301153820_addConnectionStringAndTables")]
    partial class addConnectionStringAndTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<int?>("TraineID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TraineID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Topic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Track", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Trainee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrakID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrakID");

                    b.ToTable("Trainee");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Course", b =>
                {
                    b.HasOne("TraininingSystem.DAL.Entity.Trainee", "Trainee")
                        .WithMany("Courses")
                        .HasForeignKey("TraineID");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Topic", b =>
                {
                    b.HasOne("TraininingSystem.DAL.Entity.Course", "Course")
                        .WithMany("Topics")
                        .HasForeignKey("CourseID");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Trainee", b =>
                {
                    b.HasOne("TraininingSystem.DAL.Entity.Track", "Trak")
                        .WithMany("Trainees")
                        .HasForeignKey("TrakID");

                    b.Navigation("Trak");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Course", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Track", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("TraininingSystem.DAL.Entity.Trainee", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
